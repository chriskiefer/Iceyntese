/* Generated by Yosys 0.8+     651 (git sha1 d8a2aaa, clang 10.0.1 -fPIC -Os) */

(* src = "clock_divider.v:1" *)
module clockDivider(clockIn, clockOut);
  (* src = "clock_divider.v:10" *)
  wire _000_;
  (* src = "clock_divider.v:10" *)
  wire [31:0] _001_;
  (* src = "clock_divider.v:11" *)
  wire [31:0] _002_;
  wire [7:0] _003_;
  wire [3:0] _004_;
  wire [1:0] _005_;
  wire [15:0] _006_;
  wire [31:0] _007_;
  wire _008_;
  (* src = "clock_divider.v:13" *)
  wire _009_;
  (* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "31" *)
  wire [31:0] _010_;
  (* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)
  wire _011_;
  (* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)
  wire _012_;
  (* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)
  wire _013_;
  (* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)
  wire _014_;
  (* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)
  wire _015_;
  (* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)
  wire _016_;
  (* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)
  wire _017_;
  (* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)
  wire _018_;
  (* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)
  wire _019_;
  (* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)
  wire _020_;
  (* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)
  wire _021_;
  (* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)
  wire _022_;
  (* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)
  wire _023_;
  (* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)
  wire _024_;
  (* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)
  wire _025_;
  (* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)
  wire _026_;
  (* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)
  wire _027_;
  (* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)
  wire _028_;
  (* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)
  wire _029_;
  (* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)
  wire _030_;
  (* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)
  wire _031_;
  (* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)
  wire _032_;
  (* src = "clock_divider.v:5" *)
  input clockIn;
  (* init = 1'h0 *)
  (* src = "clock_divider.v:6" *)
  output clockOut;
  reg clockOut = 1'h0;
  (* init = 32'd0 *)
  (* src = "clock_divider.v:8" *)
  reg [31:0] counter = 32'd0;
  assign _006_[3] = counter[6] |(* src = "clock_divider.v:12" *)  counter[7];
  assign _006_[4] = counter[8] |(* src = "clock_divider.v:12" *)  counter[9];
  assign _006_[5] = counter[10] |(* src = "clock_divider.v:12" *)  counter[11];
  assign _006_[6] = counter[12] |(* src = "clock_divider.v:12" *)  counter[13];
  assign _006_[7] = counter[14] |(* src = "clock_divider.v:12" *)  counter[15];
  assign _006_[8] = counter[16] |(* src = "clock_divider.v:12" *)  counter[17];
  assign _006_[9] = counter[18] |(* src = "clock_divider.v:12" *)  counter[19];
  assign _006_[10] = counter[20] |(* src = "clock_divider.v:12" *)  counter[21];
  assign _006_[11] = counter[22] |(* src = "clock_divider.v:12" *)  counter[23];
  assign _006_[12] = counter[24] |(* src = "clock_divider.v:12" *)  counter[25];
  assign _006_[13] = counter[26] |(* src = "clock_divider.v:12" *)  counter[27];
  assign _006_[14] = counter[28] |(* src = "clock_divider.v:12" *)  counter[29];
  assign _006_[15] = counter[30] |(* src = "clock_divider.v:12" *)  counter[31];
  assign _003_[0] = _006_[0] |(* src = "clock_divider.v:12" *)  _006_[1];
  assign _003_[1] = _006_[2] |(* src = "clock_divider.v:12" *)  _006_[3];
  assign _003_[2] = _006_[4] |(* src = "clock_divider.v:12" *)  _006_[5];
  assign _003_[3] = _006_[6] |(* src = "clock_divider.v:12" *)  _006_[7];
  assign _003_[4] = _006_[8] |(* src = "clock_divider.v:12" *)  _006_[9];
  assign _003_[5] = _006_[10] |(* src = "clock_divider.v:12" *)  _006_[11];
  assign _003_[6] = _006_[12] |(* src = "clock_divider.v:12" *)  _006_[13];
  assign _003_[7] = _006_[14] |(* src = "clock_divider.v:12" *)  _006_[15];
  assign _004_[0] = _003_[0] |(* src = "clock_divider.v:12" *)  _003_[1];
  assign _004_[1] = _003_[2] |(* src = "clock_divider.v:12" *)  _003_[3];
  assign _004_[2] = _003_[4] |(* src = "clock_divider.v:12" *)  _003_[5];
  assign _004_[3] = _003_[6] |(* src = "clock_divider.v:12" *)  _003_[7];
  assign _005_[0] = _004_[0] |(* src = "clock_divider.v:12" *)  _004_[1];
  assign _005_[1] = _004_[2] |(* src = "clock_divider.v:12" *)  _004_[3];
  assign _008_ = _005_[0] |(* src = "clock_divider.v:12" *)  _005_[1];
  assign _006_[0] = _002_[0] |(* src = "clock_divider.v:12" *)  counter[1];
  assign _006_[1] = counter[2] |(* src = "clock_divider.v:12" *)  _007_[3];
  assign _006_[2] = counter[4] |(* src = "clock_divider.v:12" *)  counter[5];
  assign _001_[0] = _008_ ? (* src = "clock_divider.v:12" *) _002_[0] : 1'h0;
  assign _001_[1] = _008_ ? (* src = "clock_divider.v:12" *) _002_[1] : 1'h0;
  assign _001_[2] = _008_ ? (* src = "clock_divider.v:12" *) _002_[2] : 1'h0;
  assign _001_[3] = _008_ ? (* src = "clock_divider.v:12" *) _002_[3] : 1'h0;
  assign _001_[4] = _008_ ? (* src = "clock_divider.v:12" *) _002_[4] : 1'h0;
  assign _001_[5] = _008_ ? (* src = "clock_divider.v:12" *) _002_[5] : 1'h0;
  assign _001_[6] = _008_ ? (* src = "clock_divider.v:12" *) _002_[6] : 1'h0;
  assign _001_[7] = _008_ ? (* src = "clock_divider.v:12" *) _002_[7] : 1'h0;
  assign _001_[8] = _008_ ? (* src = "clock_divider.v:12" *) _002_[8] : 1'h0;
  assign _001_[9] = _008_ ? (* src = "clock_divider.v:12" *) _002_[9] : 1'h0;
  assign _001_[10] = _008_ ? (* src = "clock_divider.v:12" *) _002_[10] : 1'h0;
  assign _001_[11] = _008_ ? (* src = "clock_divider.v:12" *) _002_[11] : 1'h0;
  assign _001_[12] = _008_ ? (* src = "clock_divider.v:12" *) _002_[12] : 1'h0;
  assign _001_[13] = _008_ ? (* src = "clock_divider.v:12" *) _002_[13] : 1'h0;
  assign _001_[14] = _008_ ? (* src = "clock_divider.v:12" *) _002_[14] : 1'h0;
  assign _001_[15] = _008_ ? (* src = "clock_divider.v:12" *) _002_[15] : 1'h0;
  assign _001_[16] = _008_ ? (* src = "clock_divider.v:12" *) _002_[16] : 1'h0;
  assign _001_[17] = _008_ ? (* src = "clock_divider.v:12" *) _002_[17] : 1'h0;
  assign _001_[18] = _008_ ? (* src = "clock_divider.v:12" *) _002_[18] : 1'h0;
  assign _001_[19] = _008_ ? (* src = "clock_divider.v:12" *) _002_[19] : 1'h0;
  assign _001_[20] = _008_ ? (* src = "clock_divider.v:12" *) _002_[20] : 1'h0;
  assign _001_[21] = _008_ ? (* src = "clock_divider.v:12" *) _002_[21] : 1'h0;
  assign _001_[22] = _008_ ? (* src = "clock_divider.v:12" *) _002_[22] : 1'h0;
  assign _001_[23] = _008_ ? (* src = "clock_divider.v:12" *) _002_[23] : 1'h0;
  assign _001_[24] = _008_ ? (* src = "clock_divider.v:12" *) _002_[24] : 1'h0;
  assign _001_[25] = _008_ ? (* src = "clock_divider.v:12" *) _002_[25] : 1'h0;
  assign _001_[26] = _008_ ? (* src = "clock_divider.v:12" *) _002_[26] : 1'h0;
  assign _001_[27] = _008_ ? (* src = "clock_divider.v:12" *) _002_[27] : 1'h0;
  assign _001_[28] = _008_ ? (* src = "clock_divider.v:12" *) _002_[28] : 1'h0;
  assign _001_[29] = _008_ ? (* src = "clock_divider.v:12" *) _002_[29] : 1'h0;
  assign _001_[30] = _008_ ? (* src = "clock_divider.v:12" *) _002_[30] : 1'h0;
  assign _001_[31] = _008_ ? (* src = "clock_divider.v:12" *) _002_[31] : 1'h0;
  assign _000_ = _008_ ? (* src = "clock_divider.v:12" *) clockOut : _009_;
  assign _009_ = ~(* src = "clock_divider.v:13" *) clockOut;
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      clockOut <= _000_;
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      counter[0] <= _001_[0];
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      counter[1] <= _001_[1];
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      counter[2] <= _001_[2];
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      counter[3] <= _001_[3];
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      counter[4] <= _001_[4];
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      counter[5] <= _001_[5];
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      counter[6] <= _001_[6];
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      counter[7] <= _001_[7];
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      counter[8] <= _001_[8];
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      counter[9] <= _001_[9];
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      counter[10] <= _001_[10];
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      counter[11] <= _001_[11];
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      counter[12] <= _001_[12];
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      counter[13] <= _001_[13];
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      counter[14] <= _001_[14];
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      counter[15] <= _001_[15];
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      counter[16] <= _001_[16];
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      counter[17] <= _001_[17];
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      counter[18] <= _001_[18];
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      counter[19] <= _001_[19];
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      counter[20] <= _001_[20];
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      counter[21] <= _001_[21];
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      counter[22] <= _001_[22];
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      counter[23] <= _001_[23];
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      counter[24] <= _001_[24];
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      counter[25] <= _001_[25];
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      counter[26] <= _001_[26];
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      counter[27] <= _001_[27];
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      counter[28] <= _001_[28];
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      counter[29] <= _001_[29];
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      counter[30] <= _001_[30];
  (* src = "clock_divider.v:10" *)
  always @(posedge clockIn)
      counter[31] <= _001_[31];
  assign _002_[1] = counter[1] ^(* src = "clock_divider.v:11|<techmap.v>:263" *)  counter[0];
  assign _002_[2] = counter[2] ^(* src = "clock_divider.v:11|<techmap.v>:263" *)  _010_[1];
  assign _002_[3] = counter[3] ^(* src = "clock_divider.v:11|<techmap.v>:263" *)  _010_[2];
  assign _002_[4] = counter[4] ^(* src = "clock_divider.v:11|<techmap.v>:263" *)  _010_[3];
  assign _002_[5] = counter[5] ^(* src = "clock_divider.v:11|<techmap.v>:263" *)  _010_[4];
  assign _002_[6] = counter[6] ^(* src = "clock_divider.v:11|<techmap.v>:263" *)  _010_[5];
  assign _002_[7] = counter[7] ^(* src = "clock_divider.v:11|<techmap.v>:263" *)  _010_[6];
  assign _002_[8] = counter[8] ^(* src = "clock_divider.v:11|<techmap.v>:263" *)  _010_[7];
  assign _002_[9] = counter[9] ^(* src = "clock_divider.v:11|<techmap.v>:263" *)  _010_[8];
  assign _002_[10] = counter[10] ^(* src = "clock_divider.v:11|<techmap.v>:263" *)  _010_[9];
  assign _002_[11] = counter[11] ^(* src = "clock_divider.v:11|<techmap.v>:263" *)  _010_[10];
  assign _002_[12] = counter[12] ^(* src = "clock_divider.v:11|<techmap.v>:263" *)  _010_[11];
  assign _002_[13] = counter[13] ^(* src = "clock_divider.v:11|<techmap.v>:263" *)  _010_[12];
  assign _002_[14] = counter[14] ^(* src = "clock_divider.v:11|<techmap.v>:263" *)  _010_[13];
  assign _002_[15] = counter[15] ^(* src = "clock_divider.v:11|<techmap.v>:263" *)  _010_[14];
  assign _002_[16] = counter[16] ^(* src = "clock_divider.v:11|<techmap.v>:263" *)  _010_[15];
  assign _002_[17] = counter[17] ^(* src = "clock_divider.v:11|<techmap.v>:263" *)  _010_[16];
  assign _002_[18] = counter[18] ^(* src = "clock_divider.v:11|<techmap.v>:263" *)  _010_[17];
  assign _002_[19] = counter[19] ^(* src = "clock_divider.v:11|<techmap.v>:263" *)  _010_[18];
  assign _002_[20] = counter[20] ^(* src = "clock_divider.v:11|<techmap.v>:263" *)  _010_[19];
  assign _002_[21] = counter[21] ^(* src = "clock_divider.v:11|<techmap.v>:263" *)  _010_[20];
  assign _002_[22] = counter[22] ^(* src = "clock_divider.v:11|<techmap.v>:263" *)  _010_[21];
  assign _002_[23] = counter[23] ^(* src = "clock_divider.v:11|<techmap.v>:263" *)  _010_[22];
  assign _002_[24] = counter[24] ^(* src = "clock_divider.v:11|<techmap.v>:263" *)  _010_[23];
  assign _002_[25] = counter[25] ^(* src = "clock_divider.v:11|<techmap.v>:263" *)  _010_[24];
  assign _002_[26] = counter[26] ^(* src = "clock_divider.v:11|<techmap.v>:263" *)  _010_[25];
  assign _002_[27] = counter[27] ^(* src = "clock_divider.v:11|<techmap.v>:263" *)  _010_[26];
  assign _002_[28] = counter[28] ^(* src = "clock_divider.v:11|<techmap.v>:263" *)  _010_[27];
  assign _002_[29] = counter[29] ^(* src = "clock_divider.v:11|<techmap.v>:263" *)  _010_[28];
  assign _002_[30] = counter[30] ^(* src = "clock_divider.v:11|<techmap.v>:263" *)  _010_[29];
  assign _002_[31] = counter[31] ^(* src = "clock_divider.v:11|<techmap.v>:263" *)  _010_[30];
  assign _002_[0] = 1'h1 ^(* src = "clock_divider.v:11|<techmap.v>:262" *)  counter[0];
  assign _010_[1] = counter[1] &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:221" *)  counter[0];
  assign _010_[3] = _011_ &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:221" *)  _010_[1];
  assign _010_[7] = _025_ &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:221" *)  _010_[3];
  assign _010_[15] = _031_ &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:221" *)  _010_[7];
  assign _011_ = counter[3] &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)  counter[2];
  assign _012_ = counter[5] &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)  counter[4];
  assign _013_ = counter[7] &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)  counter[6];
  assign _014_ = counter[9] &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)  counter[8];
  assign _015_ = counter[11] &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)  counter[10];
  assign _016_ = counter[13] &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)  counter[12];
  assign _017_ = counter[15] &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)  counter[14];
  assign _018_ = counter[17] &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)  counter[16];
  assign _019_ = counter[19] &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)  counter[18];
  assign _020_ = counter[21] &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)  counter[20];
  assign _007_[3] = counter[3] ^(* src = "clock_divider.v:12" *)  1'h1;
  assign _021_ = counter[23] &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)  counter[22];
  assign _022_ = counter[25] &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)  counter[24];
  assign _023_ = counter[27] &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)  counter[26];
  assign _024_ = counter[29] &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)  counter[28];
  assign _025_ = _013_ &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)  _012_;
  assign _026_ = _015_ &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)  _014_;
  assign _027_ = _017_ &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)  _016_;
  assign _028_ = _019_ &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)  _018_;
  assign _029_ = _021_ &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)  _020_;
  assign _030_ = _023_ &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)  _022_;
  assign _031_ = _027_ &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)  _026_;
  assign _032_ = _029_ &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:222" *)  _028_;
  assign _010_[23] = _032_ &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:229" *)  _010_[15];
  assign _010_[11] = _026_ &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:229" *)  _010_[7];
  assign _010_[19] = _028_ &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:229" *)  _010_[15];
  assign _010_[27] = _030_ &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:229" *)  _010_[23];
  assign _010_[5] = _012_ &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:229" *)  _010_[3];
  assign _010_[9] = _014_ &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:229" *)  _010_[7];
  assign _010_[13] = _016_ &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:229" *)  _010_[11];
  assign _010_[17] = _018_ &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:229" *)  _010_[15];
  assign _010_[21] = _020_ &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:229" *)  _010_[19];
  assign _010_[25] = _022_ &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:229" *)  _010_[23];
  assign _010_[29] = _024_ &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:229" *)  _010_[27];
  assign _010_[2] = counter[2] &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:229" *)  _010_[1];
  assign _010_[4] = counter[4] &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:229" *)  _010_[3];
  assign _010_[6] = counter[6] &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:229" *)  _010_[5];
  assign _010_[8] = counter[8] &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:229" *)  _010_[7];
  assign _010_[10] = counter[10] &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:229" *)  _010_[9];
  assign _010_[12] = counter[12] &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:229" *)  _010_[11];
  assign _010_[14] = counter[14] &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:229" *)  _010_[13];
  assign _010_[16] = counter[16] &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:229" *)  _010_[15];
  assign _010_[18] = counter[18] &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:229" *)  _010_[17];
  assign _010_[20] = counter[20] &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:229" *)  _010_[19];
  assign _010_[22] = counter[22] &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:229" *)  _010_[21];
  assign _010_[24] = counter[24] &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:229" *)  _010_[23];
  assign _010_[26] = counter[26] &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:229" *)  _010_[25];
  assign _010_[28] = counter[28] &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:229" *)  _010_[27];
  assign _010_[30] = counter[30] &(* src = "clock_divider.v:11|<techmap.v>:260|<techmap.v>:229" *)  _010_[29];
  assign { _007_[31:4], _007_[2:0] } = { counter[31:4], counter[2:1], _002_[0] };
  assign _010_[0] = counter[0];
endmodule
